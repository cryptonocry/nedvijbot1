from aiogram import Bot, Dispatcher, types
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.utils import executor
import os

TOKEN = os.getenv("BOT_TOKEN")

bot = Bot(token="7665240651:AAHbJ4fBrNQxwcLFO-J1KEHGLTe18q4CaQ4")
dp = Dispatcher(bot)

def main_menu():
    keyboard = InlineKeyboardMarkup(row_width=2)
    keyboard.add(
        InlineKeyboardButton("\U0001F3E2 –ñ–∏–ª–æ–π –∫–æ–º–ø–ª–µ–∫—Å", callback_data="complex_0"),
        InlineKeyboardButton("\U0001F30D –†–∞–π–æ–Ω", callback_data="district_0"),
        InlineKeyboardButton("\U0001F3E0 –ö–≤–∞—Ä—Ç–∏—Ä–∞", callback_data="apartment_0"),
        InlineKeyboardButton("\U0001F3A5 –í–∏–¥–µ–æ–æ–±–∑–æ—Ä", callback_data="video"),
        InlineKeyboardButton("\U0001F5BC –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è", callback_data="viz"),
        InlineKeyboardButton("\U0001F4C5 –ó–∞–ø–∏—Å—å –Ω–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä", callback_data="visit"),
        InlineKeyboardButton("\U0001F46E –ö–æ–º–∞–Ω–¥–∞ –ø—Ä–æ–µ–∫—Ç–∞", callback_data="team"),
        InlineKeyboardButton("\U0001F91D –ü–∞—Ä—Ç–Ω—ë—Ä –ø—Ä–æ–µ–∫—Ç–∞", callback_data="partner"),
    )
    return keyboard

def navigation_buttons(section, index, total):
    keyboard = InlineKeyboardMarkup(row_width=2)

    if index == 0:
        # –ü–µ—Ä–≤—ã–π —Å–ª–∞–π–¥: —Ç–æ–ª—å–∫–æ "–í–ø–µ—Ä—ë–¥"
        keyboard.add(InlineKeyboardButton("‚û°Ô∏è –í–ø–µ—Ä—ë–¥", callback_data=f"{section}_{index+1}"))
    elif index == total - 1:
        # –ü–æ—Å–ª–µ–¥–Ω–∏–π —Å–ª–∞–π–¥: —Ç–æ–ª—å–∫–æ "–ù–∞–∑–∞–¥"
        keyboard.add(InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"{section}_{index-1}"))
    else:
        # –í—Å–µ –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ
        keyboard.row(
            InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"{section}_{index-1}"),
            InlineKeyboardButton("‚û°Ô∏è –í–ø–µ—Ä—ë–¥", callback_data=f"{section}_{index+1}")
        )

    # –í–æ–∑–≤—Ä–∞—Ç –≤ –º–µ–Ω—é –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ
    keyboard.add(InlineKeyboardButton("‚Ü©Ô∏è –í–æ–∑–≤—Ä–∞—Ç –≤ –º–µ–Ω—é", callback_data="menu"))

    return keyboard


section_messages = {
    "complex": [
        ("–ñ–∏–ª–æ–π –∫–æ–º–ø–ª–µ–∫—Å '–°–æ–∫–æ–ª': —Å—Ç–∏–ª—å –∏ –∫–æ–º—Ñ–æ—Ä—Ç", "media/complex1.jpg"),
        ("–ü–∞–Ω–æ—Ä–∞–º–∞ –¥–≤–æ—Ä–∞", "media/complex2.jpg"),
        ("–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞—Å–∞–¥ –∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞", "media/complex3.jpg")
    ],
    "district": [
        ("–†–∞–π–æ–Ω –°–æ–∫–æ–ª ‚Äî —ç–ª–∏—Ç–Ω–æ–µ –ø—Ä–æ—à–ª–æ–µ –∏ –±—É–¥—É—â–µ–µ", "media/district1.jpg"),
        ("–ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –Ω–∞ –≤—ã—Å–æ—Ç–µ", "media/district2.jpg"),
        ("–ó–µ–ª—ë–Ω—ã–µ –∑–æ–Ω—ã –∏ –ø–∞—Ä–∫–∏ –ø–æ–±–ª–∏–∑–æ—Å—Ç–∏", "media/district3.jpg")
    ],
    "apartment": [
        ("–ü–ª–∞–Ω–∏—Ä–æ–≤–∫–∞ –∫–≤–∞—Ä—Ç–∏—Ä—ã 72–º¬≤", "media/apartment1.jpg"),
        ("–ö—É—Ö–Ω—è-–≥–æ—Å—Ç–∏–Ω–∞—è –≤ —Å—Ç–∏–ª–µ –º–∏–Ω–∏–º–∞–ª–∏–∑–º", "media/apartment2.jpg"),
        ("–ü—Ä–æ—Å—Ç–æ—Ä–Ω–∞—è —Å–ø–∞–ª—å–Ω—è —Å –≤–∏–¥–æ–º", "media/apartment3.jpg")
    ]
}

@dp.message_handler()
async def handle_any_message(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π —Ä–∞–∑–¥–µ–ª:", reply_markup=main_menu())

@dp.callback_query_handler(lambda c: True)
async def process_callback(callback_query: types.CallbackQuery):
    data = callback_query.data
    user_id = callback_query.from_user.id

    if data == "menu":
        await bot.send_message(user_id, "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=main_menu())
    elif data == "visit":
keyboard = InlineKeyboardMarkup(row_width=1)
keyboard.add(
    InlineKeyboardButton("üìû –ü–æ–∑–≤–æ–Ω–∏—Ç—å: +79993332211", url="tel:+79993332211"),
    InlineKeyboardButton("‚úâÔ∏è –ù–∞–ø–∏—Å–∞—Ç—å –≤ Telegram", url="https://t.me/vitalllx"),
    InlineKeyboardButton("‚Ü©Ô∏è –í–æ–∑–≤—Ä–∞—Ç –≤ –º–µ–Ω—é", callback_data="menu")
)
await bot.send_message(user_id, "–î–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤—ã –º–æ–∂–µ—Ç–µ:", reply_markup=keyboard)
    elif "_" in data:
        section, index = data.split("_")
        index = int(index)
        if section in section_messages:
            text, image_path = section_messages[section][index]
            with open(image_path, "rb") as photo:
                keyboard = navigation_buttons(section, index, len(section_messages[section]))
                await bot.send_photo(user_id, photo=photo, caption=text, reply_markup=keyboard)
        else:
            await bot.send_message(user_id, "–†–∞–∑–¥–µ–ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.", reply_markup=main_menu())
        await callback_query.answer()
    else:
        await bot.send_message(user_id, "–†–∞–∑–¥–µ–ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.", reply_markup=main_menu())
        await callback_query.answer()

if __name__ == "__main__":
    executor.start_polling(dp)
